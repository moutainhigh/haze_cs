<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.info.back.dao.OperaLogDao" >
  <resultMap id="BaseResultMap" type="com.info.back.vo.OperaLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="opera_user" property="operaUser" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="log_type" property="logType" jdbcType="INTEGER" />
    <result column="params" property="params" jdbcType="VARCHAR" />
    <result column="ip_addr" property="ipAddr" jdbcType="VARCHAR" />
    <result column="error_code" property="errorCode" jdbcType="VARCHAR" />
    <result column="error_msg" property="errorMsg" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, description, opera_user, method, log_type, params, ip_addr, error_code, 
    error_msg, create_at, update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from opera_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from opera_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.info.back.vo.OperaLog" >
    insert into opera_log (id, type, description, 
      opera_user, method, log_type, 
      params, ip_addr, error_code, 
      error_msg, create_at, update_at
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{operaUser,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{logType,jdbcType=INTEGER}, 
      #{params,jdbcType=VARCHAR}, #{ipAddr,jdbcType=VARCHAR}, #{errorCode,jdbcType=VARCHAR}, 
      #{errorMsg,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.info.back.vo.OperaLog" >
    insert into opera_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="operaUser != null" >
        opera_user,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="logType != null" >
        log_type,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="ipAddr != null" >
        ip_addr,
      </if>
      <if test="errorCode != null" >
        error_code,
      </if>
      <if test="errorMsg != null" >
        error_msg,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="operaUser != null" >
        #{operaUser,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="logType != null" >
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="ipAddr != null" >
        #{ipAddr,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null" >
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null" >
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.info.back.vo.OperaLog" >
    update opera_log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="operaUser != null" >
        opera_user = #{operaUser,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="logType != null" >
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="ipAddr != null" >
        ip_addr = #{ipAddr,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null" >
        error_code = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null" >
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.info.back.vo.OperaLog" >
    update opera_log
    set type = #{type,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      opera_user = #{operaUser,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=INTEGER},
      params = #{params,jdbcType=VARCHAR},
      ip_addr = #{ipAddr,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>